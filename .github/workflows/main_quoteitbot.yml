name: Build and Deploy Discord Bot to Azure App Service

on:
  push:
    branches:
      - main
    # Paths filter can be simplified or removed if the repo only contains the bot
    paths:
      - '**' # Trigger on any change in the repo
      - '!README.md' # Optional: Exclude README changes from triggering
      - '.github/workflows/main_quoteitbot.yml'
  workflow_dispatch:

jobs:
  build_and_package_bot:
    name: Build and Package Discord Bot
    runs-on: ubuntu-latest
    permissions:
      contents: read

    # NO job-level default working-directory, as operations are at repo root

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Debug - Show current directory and list files
        working-directory: ${{ github.workspace }}
        run: |
          echo "--- Current directory (should be Repo Root): $(pwd) ---"
          echo "--- Listing files in Repo Root: ---"
          ls -la
          echo "--- Contents of package.json: ---"
          cat package.json || echo "package.json not found in $(pwd)"

      - name: Install Bot Dependencies
        working-directory: ${{ github.workspace }}
        run: npm ci

      # - name: Build Bot Application (if applicable)
      #   working-directory: ${{ github.workspace }}
      #   run: npm run build --if-present

      - name: Prepare Bot Deployment Package
        working-directory: ${{ github.workspace }}
        run: |
          echo "--- Preparing deployment package from $(pwd) ---"
          mkdir -p ${{ github.workspace }}/deployment_package_bot_staging
          
          echo "--- Copying application files to staging directory... ---"
          cp package.json ${{ github.workspace }}/deployment_package_bot_staging/
          cp package-lock.json ${{ github.workspace }}/deployment_package_bot_staging/
          cp index.js ${{ github.workspace }}/deployment_package_bot_staging/
          
          if [ -d "utils" ]; then cp -r utils ${{ github.workspace }}/deployment_package_bot_staging/; fi
          if [ -d "commands" ]; then cp -r commands ${{ github.workspace }}/deployment_package_bot_staging/; fi
          # Add other necessary files/folders from the repository root

          echo "--- Contents of staging directory (deployment_package_bot_staging): ---"
          ls -la ${{ github.workspace }}/deployment_package_bot_staging

      - name: Zip Bot Deployment Package
        working-directory: ${{ github.workspace }}
        run: |
          echo "--- Zipping contents of deployment_package_bot_staging from $(pwd) ---"
          cd deployment_package_bot_staging
          zip -r ../discord-bot-release.zip ./*
          cd ..
          echo "--- Created discord-bot-release.zip in repository root ---"

      - name: Upload Bot Artifact
        uses: actions/upload-artifact@v4
        with:
          name: discord-bot-app-artifact
          path: discord-bot-release.zip

  deploy_bot_to_azure:
    name: Deploy Discord Bot to Azure App Service
    runs-on: ubuntu-latest
    needs: build_and_package_bot
    environment:
      name: 'Production_Bot'
      url: ${{ steps.deploy-to-bot-app-service.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      - name: Download Bot Artifact
        uses: actions/download-artifact@v4
        with:
          name: discord-bot-app-artifact

      - name: Unzip Bot Artifact
        run: |
          unzip discord-bot-release.zip -d ./deploy_bot_content_final
          ls -la ./deploy_bot_content_final

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure App Service for Bot
        id: deploy-to-bot-app-service
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'QuoteItBot' # !!! REPLACE WITH YOUR BOT'S APP SERVICE NAME !!!
          slot-name: 'Production'
          package: ./deploy_bot_content_final
